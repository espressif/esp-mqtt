stages:
  - build
  - static_analysis
  - deploy_report
  - deploy


variables:
  IDF_REPO: ${GITLAB_SSH_SERVER}/idf/esp-idf.git

.add_gh_key_remote: &add_gh_key_remote |
  cit_add_ssh_key "${GH_PUSH_KEY}"
  git remote remove github || true
  git remote add github ${GH_PUSH_REPO}

before_script:
  # Use CI Tools
  - curl -sSL ${CIT_LOADER_URL} | sh
  - source citools/import_functions
  - PATH=$CI_PROJECT_DIR/esp-idf/tools:$PATH

build_with_idf:
  stage: build
  image: ${CI_DOCKER_REGISTRY}/esp32-ci-env
  tags:
    - build
  dependencies: []
  artifacts:
    when: always
    paths:
      - tidybuild/*
    expire_in: 1 day
  script:
    - cit_add_ssh_key "${GITLAB_KEY}"
    - git clone "${IDF_REPO}"
    - cd esp-idf
    - ./tools/ci/mirror-submodule-update.sh
    - export IDF_PATH=$(pwd)
    - cd $IDF_PATH/components/mqtt/esp-mqtt
    - rm -rf .git
    - cp -r $CI_PROJECT_DIR/.git .
    - git reset --hard $CI_COMMIT_SHA
    # build one example and capture compile commands/flags for static analysis
    - cd $IDF_PATH/examples/protocols/mqtt/tcp
    - export PEDANTIC_CFLAGS="-Werror -Werror=deprecated-declarations -Werror=unused-variable -Werror=unused-but-set-variable -Werror=unused-function"
    - export EXTRA_CFLAGS=${PEDANTIC_CFLAGS} && export EXTRA_CXXFLAGS=${EXTRA_CFLAGS}
    - idf.py build
    - mkdir -p tidybuild
    - cd tidybuild
    - cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    - cd $CI_PROJECT_DIR
    - mv $IDF_PATH/examples/protocols/mqtt/tcp/tidybuild $CI_PROJECT_DIR/tidybuild
    # build other examples
    - cd $IDF_PATH/examples/protocols/mqtt/ssl && idf.py build
    - cd $IDF_PATH/examples/protocols/mqtt/ssl_mutual_auth && idf.py build
    - cd $IDF_PATH/examples/protocols/mqtt/ws && idf.py build
    - cd $IDF_PATH/examples/protocols/mqtt/wss && idf.py build

clang_tidy_check:
  stage: static_analysis
  image: ${CI_DOCKER_REGISTRY}/clang-static-analysis
  tags:
    - host_test
  dependencies:
    - build_with_idf
  artifacts:
    reports:
      junit: esp-idf/examples/protocols/mqtt/tcp/tidybuild/output.xml
    when: always
    paths:
      - esp-idf/examples/protocols/mqtt/tcp/tidybuild/report/*
    expire_in: 1 day
  script:
    - cit_add_ssh_key "${GITLAB_KEY}"
    - git clone "${IDF_REPO}"
    - cd esp-idf
    - ./tools/ci/mirror-submodule-update.sh
    - export IDF_PATH=$(pwd)
    - cd $IDF_PATH/components/mqtt/esp-mqtt
    - rm -rf .git
    - cp -r $CI_PROJECT_DIR/.git .
    - git checkout $CI_COMMIT_SHA
    - mv $CI_PROJECT_DIR/tidybuild $IDF_PATH/examples/protocols/mqtt/tcp/tidybuild
    - cd $IDF_PATH/examples/protocols/mqtt/tcp/tidybuild
    - git clone "${CI_REPORT_TOOLS}"
    - cd static-analysis-utils
    - ./generate_report.sh $CI_PROJECT_DIR/.clang-tidy-limits.yml $IDF_PATH/examples/protocols/mqtt/tcp/tidybuild/report $IDF_PATH/examples/protocols/mqtt/tcp/tidybuild/output.xml

deploy_report:
  stage: deploy_report
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  tags:
    - deploy
  dependencies:
    - clang_tidy_check
  script:
    - cit_add_ssh_key "${DOCS_DEPLOY_KEY}"
    - echo -e "Host $DOCS_SERVER\n\tStrictHostKeyChecking no\n\tUser $DOCS_SERVER_USER\n" >> ~/.ssh/config
    - export GIT_VER=$(git describe --always)
    - cd esp-idf/examples/protocols/mqtt/tcp/tidybuild
    - mv report $GIT_VER
    - tar czvf $GIT_VER.tar.gz $GIT_VER
    - ssh $DOCS_SERVER -x "mkdir -p $DOCS_PATH/clang-tidy"
    - scp $GIT_VER.tar.gz $DOCS_SERVER:$DOCS_PATH/clang-tidy
    - ssh $DOCS_SERVER -x "cd $DOCS_PATH/clang-tidy && tar xzvf $GIT_VER.tar.gz && rm -f latest && ln -s $GIT_VER latest"
    # add link to view the report
    - echo "[static analysis][clang tidy] $CI_DOCKER_REGISTRY/static_analysis/esp-idf/clang-tidy/${GIT_VER}/index.html"

push_master_to_github:
  stage: deploy
  image: ${CI_DOCKER_REGISTRY}/esp32-ci-env
  tags:
    - build
  only:
    - master
    - idf
  when: on_success
  variables:
    GIT_STRATEGY: clone
  script:
    - *add_gh_key_remote
    - git push github HEAD:${CI_COMMIT_REF_NAME}
