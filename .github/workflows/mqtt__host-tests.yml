name: "esp-mqtt: host-tests"

on:
    push:
        branches:
            - master
    pull_request:
        types: [opened, synchronize, reopened, labeled]

jobs:
    host_test_esp_mqtt:
        name: Host Tests
        runs-on: ubuntu-24.04
        permissions:
            contents: write
        container: espressif/idf:latest
        env:
            COMP_DIR: components/mqtt/esp-mqtt
            app_name: host_test
            app_path: test/host_test
            target: linux
        steps:
            - name: Checkout esp-mqtt
              uses: actions/checkout@v4
            - name: Build App
              id: build
              uses: ./.github/actions/build-app
              with:
                  idf_version: latest
                  target: ${{env.target}}
                  app_name: ${{env.app_name}}
                  app_path: ${{env.app_path}}
                  build_dir: build_@t_@w
            - name: Test
              shell: bash
              run: |
                  ${{env.app_path}}/build_linux_default/host_mqtt_client_test.elf -r junit -o junit.xml
            # - name: Run gcovr
            #   shell: bash
            #   run: |
            #       apt-get install -y python3-pip
            #       python -m pip install gcovr --break-system-packages
            #       # gcov -b ${{env.app_path}}/main/mqtt_client.c. -o  `find . -name "mqtt_client*gcda" -exec dirname {} \;`
            #       cd ${{env.app_path}}/build_linux_default
            #       gcovr --gcov-ignore-parse-errors -g -k -r ../../.. --html index.html -x esp_mqtt_coverage.xml
            #       # mkdir docs_gcovr
            #       # mv index.html docs_gcovr
            #       # touch docs_gcovr/.nojekyll
            # - name: Code Coverage Summary Report
            #   uses: irongut/CodeCoverageSummary@v1.3.0
            #   with:
            #       filename: ./**/esp_mqtt_coverage.xml
            #       badge: true
            #       fail_below_min: false
            #       format: markdown
            #       hide_branch_rate: false
            #       hide_complexity: false
            #       indicators: true
            #       output: both
            #       thresholds: "60 80"
            # - name: Write to Job Summary
            #   run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
            # - name: Upload artifacts
            #   uses: actions/upload-artifact@v4
            #   if: always()
            #   with:
            #       name: docs_gcovr
            #       path: ${{ env.IDF_PATH }}/${{ env.COMP_DIR }}/docs_gcovr
            #       if-no-files-found: error
            # - name: Deploy coverage summary
            #   if: github.ref == 'refs/heads/master'
            #   uses: JamesIves/github-pages-deploy-action@v4.4.1
            #   with:
            #       branch: gh-pages
            #       folder: ${{ env.IDF_PATH }}/${{ env.COMP_DIR }}/docs_gcovr
